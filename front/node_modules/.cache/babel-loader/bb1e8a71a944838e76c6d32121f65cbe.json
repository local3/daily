{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { DayPickerRangeController } from 'react-dates';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { format, compareAsc } from 'date-fns';\nimport 'moment/locale/ja';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\nimport '../styles/css/react-dates-custom.css'; // function CustomReactDatesDateRangePicker() {\n//   const dateFormat = 'YYYY/MM/DD';\n//   const [date, setDate] = useState();\n//   const [focused, setFocused] = useState(true);\n//   return (\n//     <>\n//       <SingleDatePicker\n//         date={date}\n//         onDateChange={date => setDate(date)}\n//         focused={focused}\n//         onFocusChange={focused => setFocused(focused)}\n//         id=\"date\"\n//         onClose={focused => setFocused(false)}\n//       />\n//       <TextField\n//         label=\"日付\"\n//         value={date ? date : \"none\"}\n//         onFocus={() => setFocused(true)}\n//       />\n//       <DayPickerRangeController\n//         navPrev={ // 前の月に戻るボタン ★\n//           <IconButton>\n//             <NavigateBeforeIcon />\n//           </IconButton>\n//         }\n//         navNext={ // 次の月に進むボタン ★\n//           <IconButton>\n//             <NavigateNextIcon />\n//           </IconButton>\n//         }\n//         hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n//         date={date}\n//         onDateChange={date => setDate(date)}\n//         focused={focused}\n//         onFocusChange={focused => setFocused(focused)}\n//         id=\"date\"\n//         onClose={focused => setFocused(false)}\n//       />\n//     </>\n//   );\n// }\n// export default CustomReactDatesDateRangePicker;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  textField: {\n    width: '25ch'\n  }\n}));\n\nfunction CustomReactDatesDateRangePicker() {\n  _s();\n\n  const classes = useStyles();\n  const dateFormat = 'YYYY/MM/DD';\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [focusedInput, setFocusedInput] = useState('startDate');\n  const [display, setDisplay] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      label: \"react-dates\",\n      value: startDate && endDate ? `${startDate.format(dateFormat)} ~ ${endDate.format(dateFormat)}` : '',\n      onFocus: () => setDisplay(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), display && /*#__PURE__*/_jsxDEV(DayPickerRangeController, {\n      startDate: startDate,\n      endDate: endDate,\n      focusedInput: focusedInput,\n      navPrev:\n      /*#__PURE__*/\n      // 前の月に戻るボタン ★\n      _jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this),\n      navNext:\n      /*#__PURE__*/\n      // 次の月に進むボタン ★\n      _jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) // hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n      ,\n      onFocusChange: focusedInput => {\n        setFocusedInput(!focusedInput ? 'startDate' : focusedInput);\n      },\n      onDatesChange: selectedDates => {\n        if (focusedInput === 'startDate') {\n          setStartDate(selectedDates.startDate);\n        } else {\n          setEndDate(selectedDates.endDate);\n        }\n      },\n      onOutsideClick: () => setDisplay(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomReactDatesDateRangePicker, \"Dp23Pd8TT0/sgZpbZeLCxqZlmHc=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomReactDatesDateRangePicker;\n;\nexport default CustomReactDatesDateRangePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomReactDatesDateRangePicker\");","map":{"version":3,"sources":["/app/src/pages/Calendar.js"],"names":["Link","Header","Footer","React","useEffect","useState","createStyles","makeStyles","TextField","moment","DayPickerRangeController","IconButton","NavigateBeforeIcon","NavigateNextIcon","format","compareAsc","SingleDatePicker","useStyles","textField","width","CustomReactDatesDateRangePicker","classes","dateFormat","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","display","setDisplay","selectedDates"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { DayPickerRangeController } from 'react-dates';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { format, compareAsc } from 'date-fns'\nimport 'moment/locale/ja';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\n\nimport '../styles/css/react-dates-custom.css';\n\n// function CustomReactDatesDateRangePicker() {\n//   const dateFormat = 'YYYY/MM/DD';\n//   const [date, setDate] = useState();\n//   const [focused, setFocused] = useState(true);\n\n//   return (\n//     <>\n//       <SingleDatePicker\n//         date={date}\n//         onDateChange={date => setDate(date)}\n//         focused={focused}\n//         onFocusChange={focused => setFocused(focused)}\n//         id=\"date\"\n//         onClose={focused => setFocused(false)}\n//       />\n//       <TextField\n//         label=\"日付\"\n//         value={date ? date : \"none\"}\n//         onFocus={() => setFocused(true)}\n//       />\n//       <DayPickerRangeController\n//         navPrev={ // 前の月に戻るボタン ★\n//           <IconButton>\n//             <NavigateBeforeIcon />\n//           </IconButton>\n//         }\n//         navNext={ // 次の月に進むボタン ★\n//           <IconButton>\n//             <NavigateNextIcon />\n//           </IconButton>\n//         }\n//         hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n//         date={date}\n//         onDateChange={date => setDate(date)}\n//         focused={focused}\n//         onFocusChange={focused => setFocused(focused)}\n//         id=\"date\"\n//         onClose={focused => setFocused(false)}\n//       />\n//     </>\n//   );\n// }\n\n// export default CustomReactDatesDateRangePicker;\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    textField: {\n      width: '25ch',\n    },\n  })\n);\n\nfunction CustomReactDatesDateRangePicker(){\n  const classes = useStyles();\n  const dateFormat = 'YYYY/MM/DD';\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [focusedInput, setFocusedInput] = useState('startDate');\n  const [display, setDisplay] = useState(false);\n\n  return (\n    <>\n      <TextField\n        className={classes.textField}\n        label=\"react-dates\"\n        value={\n          startDate && endDate\n            ? `${startDate.format(dateFormat)} ~ ${endDate.format(dateFormat)}`\n            : ''\n        }\n        onFocus={() => setDisplay(true)}\n      />\n      {display && (\n        <DayPickerRangeController\n          startDate={startDate}\n          endDate={endDate}\n          focusedInput={focusedInput}\n          navPrev={ // 前の月に戻るボタン ★\n            <IconButton>\n              <NavigateBeforeIcon />\n            </IconButton>\n          }\n          navNext={ // 次の月に進むボタン ★\n            <IconButton>\n              <NavigateNextIcon />\n            </IconButton>\n          }\n          // hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n          onFocusChange={(focusedInput) => {\n            setFocusedInput(!focusedInput ? 'startDate' : focusedInput);\n          }}\n          onDatesChange={(selectedDates) => {\n            if (focusedInput === 'startDate') {\n              setStartDate(selectedDates.startDate);\n            } else {\n              setEndDate(selectedDates.endDate);\n            }\n          }}\n          onOutsideClick={() => setDisplay(false)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CustomReactDatesDateRangePicker;"]},"metadata":{},"sourceType":"module"}