{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nconst initialState = [{\n  errMsg: null\n}];\nexport const ErrorContext = /*#__PURE__*/React.createContext(initialState);\n\nconst errorReducer = (state, action) => {\n  switch (action) {\n    case 422:\n      return { ...state,\n        msg: action.msg\n      };\n  }\n};\n\nconst ErrorProvider = props => {\n  _s();\n\n  const [errorState, dispatch] = useReducer(errorReducer, initialState);\n  const value = {\n    errorState,\n    dispatch\n  }; // console.log(errorState)\n  // console.log(dispatch)\n  // console.log(props)\n  // console.log(children)\n  // console.log(props.children)\n  // console.log(typeof(props.children))\n  // return(\n  // \t<ErrorContext.Provider\n  // \t\tvalue={value}\n  // \t>\n  // \t\t{ props.children }\n  // \t</ErrorContext.Provider>\n  // )\n};\n\n_s(ErrorProvider, \"JNDsUpBDI04vjgI3X6qGFE9h024=\");\n\n_c = ErrorProvider;\nexport default ErrorProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorProvider\");","map":{"version":3,"sources":["/app/src/store/ErrorProvider.js"],"names":["React","useReducer","initialState","errMsg","ErrorContext","createContext","errorReducer","state","action","msg","ErrorProvider","props","errorState","dispatch","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAiC,OAAjC;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAD,CAArB;AACA,OAAO,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,CAAoBH,YAApB,CAArB;;AACP,MAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAP;AACC,SAAK,GAAL;AACC,aAAO,EAAE,GAAGD,KAAL;AAAYE,QAAAA,GAAG,EAAED,MAAM,CAACC;AAAxB,OAAP;AAFF;AAID,CALD;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,UAAU,CAACK,YAAD,EAAeJ,YAAf,CAAzC;AACA,QAAMY,KAAK,GAAG;AAACF,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAd,CAFgC,CAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBD;;GAAMH,a;;KAAAA,a;AAiBN,eAAeA,aAAf","sourcesContent":["import React,{ useReducer } from 'react'\n\nconst initialState = [{ errMsg: null }]\nexport const ErrorContext = React.createContext(initialState)\nconst errorReducer = (state, action) => {\n\t\tswitch(action){\n\t\t\tcase(422):\n\t\t\t\treturn { ...state, msg: action.msg }\n\t\t}\n}\n\nconst ErrorProvider = (props) => {\n\tconst [errorState, dispatch] = useReducer(errorReducer, initialState)\n\tconst value = {errorState, dispatch}\n\t// console.log(errorState)\n\t// console.log(dispatch)\n\t// console.log(props)\n\t// console.log(children)\n\t// console.log(props.children)\n\t// console.log(typeof(props.children))\n\t// return(\n\t// \t<ErrorContext.Provider\n\t// \t\tvalue={value}\n\t// \t>\n\t// \t\t{ props.children }\n\t// \t</ErrorContext.Provider>\n\t// )\n}\nexport default ErrorProvider;"]},"metadata":{},"sourceType":"module"}