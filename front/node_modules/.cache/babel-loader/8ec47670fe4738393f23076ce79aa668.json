{"ast":null,"code":"import { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { DayPickerRangeController } from 'react-dates';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport 'moment/locale/ja';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\nimport '../styles/css/react-dates-custom.css'; // const useStyles = makeStyles(() =>\n//   createStyles({\n//     textField: {\n//       width: '25ch',\n//     },\n//   })\n// );\n// function CustomReactDatesDateRangePicker(){\n//   const classes = useStyles();\n//   const dateFormat = 'YYYY/MM/DD';\n//   const [startDate, setStartDate] = useState(null);\n//   const [endDate, setEndDate] = useState(null);\n//   const [focusedInput, setFocusedInput] = useState('startDate');\n//   const [display, setDisplay] = useState(false);\n//   return (\n//     <>\n//       <TextField\n//         className={classes.textField}\n//         label=\"react-dates\"\n//         value={\n//           startDate && endDate\n//             ? `${startDate.format(dateFormat)} ~ ${endDate.format(dateFormat)}`\n//             : ''\n//         }\n//         onFocus={() => setDisplay(true)}\n//       />\n//       {display && (\n//         <DayPickerRangeController\n//           startDate={startDate}\n//           endDate={endDate}\n//           focusedInput={focusedInput}\n//           navPrev={ // 前の月に戻るボタン ★\n//             <IconButton>\n//               <NavigateBeforeIcon />\n//             </IconButton>\n//           }\n//           navNext={ // 次の月に進むボタン ★\n//             <IconButton>\n//               <NavigateNextIcon />\n//             </IconButton>\n//           }\n//           // hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n//           onFocusChange={(focusedInput) => {\n//             setFocusedInput(!focusedInput ? 'startDate' : focusedInput);\n//           }}\n//           onDatesChange={(selectedDates) => {\n//             if (focusedInput === 'startDate') {\n//               setStartDate(selectedDates.startDate);\n//             } else {\n//               setEndDate(selectedDates.endDate);\n//             }\n//           }}\n//           onOutsideClick={() => setDisplay(false)}\n//         />\n//       )}\n//     </>\n//   );\n// };\n// export default CustomReactDatesDateRangePicker;","map":{"version":3,"sources":["/app/src/pages/Calendar.js"],"names":["Link","Header","Footer","React","useState","createStyles","makeStyles","TextField","moment","DayPickerRangeController","IconButton","NavigateBeforeIcon","NavigateNextIcon","SingleDatePicker"],"mappings":"AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAGA,OAAO,kBAAP;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,sCAAP,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Link } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { DayPickerRangeController } from 'react-dates';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n\nimport 'moment/locale/ja';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\n\nimport '../styles/css/react-dates-custom.css';\n\n\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n//     textField: {\n//       width: '25ch',\n//     },\n//   })\n// );\n\n// function CustomReactDatesDateRangePicker(){\n//   const classes = useStyles();\n//   const dateFormat = 'YYYY/MM/DD';\n//   const [startDate, setStartDate] = useState(null);\n//   const [endDate, setEndDate] = useState(null);\n//   const [focusedInput, setFocusedInput] = useState('startDate');\n//   const [display, setDisplay] = useState(false);\n\n//   return (\n//     <>\n//       <TextField\n//         className={classes.textField}\n//         label=\"react-dates\"\n//         value={\n//           startDate && endDate\n//             ? `${startDate.format(dateFormat)} ~ ${endDate.format(dateFormat)}`\n//             : ''\n//         }\n//         onFocus={() => setDisplay(true)}\n//       />\n//       {display && (\n//         <DayPickerRangeController\n//           startDate={startDate}\n//           endDate={endDate}\n//           focusedInput={focusedInput}\n//           navPrev={ // 前の月に戻るボタン ★\n//             <IconButton>\n//               <NavigateBeforeIcon />\n//             </IconButton>\n//           }\n//           navNext={ // 次の月に進むボタン ★\n//             <IconButton>\n//               <NavigateNextIcon />\n//             </IconButton>\n//           }\n//           // hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n//           onFocusChange={(focusedInput) => {\n//             setFocusedInput(!focusedInput ? 'startDate' : focusedInput);\n//           }}\n//           onDatesChange={(selectedDates) => {\n//             if (focusedInput === 'startDate') {\n//               setStartDate(selectedDates.startDate);\n//             } else {\n//               setEndDate(selectedDates.endDate);\n//             }\n//           }}\n//           onOutsideClick={() => setDisplay(false)}\n//         />\n//       )}\n//     </>\n//   );\n// };\n\n// export default CustomReactDatesDateRangePicker;"]},"metadata":{},"sourceType":"module"}