{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { DayPickerRangeController } from 'react-dates';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { format, compareAsc } from 'date-fns';\nimport 'moment/locale/ja';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\nimport '../styles/css/react-dates-custom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CustomReactDatesDateRangePicker() {\n  _s();\n\n  const dateFormat = 'YYYY-MM-DD';\n  const [date, setDate] = useState();\n  const [focused, setFocused] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SingleDatePicker, {\n      navPrev:\n      /*#__PURE__*/\n      // 前の月に戻るボタン ★\n      _jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this),\n      navNext:\n      /*#__PURE__*/\n      // 次の月に進むボタン ★\n      _jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this),\n      hideKeyboardShortcutsPanel: true // 右下の?ボタンをなくす\n      ,\n      date: date,\n      onDateChange: date => setDate(date),\n      focused: focused,\n      onFocusChange: focused => setFocused(focused) // id=\"date\"\n      // onClose={focused => setFocused(false)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/diary/' + moment(date).format(dateFormat),\n      children: \"\\u65E5\\u8A18\\u3092\\u66F8\\u304F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomReactDatesDateRangePicker, \"3fhAACvB/OSFYOfyfsp8h5viwME=\");\n\n_c = CustomReactDatesDateRangePicker;\nexport default CustomReactDatesDateRangePicker; // const useStyles = makeStyles(() =>\n//   createStyles({\n//     textField: {\n//       width: '25ch',\n//     },\n//   })\n// );\n// function CustomReactDatesDateRangePicker(){\n//   const classes = useStyles();\n//   const dateFormat = 'YYYY/MM/DD';\n//   const [startDate, setStartDate] = useState(null);\n//   const [endDate, setEndDate] = useState(null);\n//   const [focusedInput, setFocusedInput] = useState('startDate');\n//   const [display, setDisplay] = useState(false);\n//   return (\n//     <>\n//       <TextField\n//         className={classes.textField}\n//         label=\"react-dates\"\n//         value={\n//           startDate && endDate\n//             ? `${startDate.format(dateFormat)} ~ ${endDate.format(dateFormat)}`\n//             : ''\n//         }\n//         onFocus={() => setDisplay(true)}\n//       />\n//       {display && (\n//         <DayPickerRangeController\n//           startDate={startDate}\n//           endDate={endDate}\n//           focusedInput={focusedInput}\n//           navPrev={ // 前の月に戻るボタン ★\n//             <IconButton>\n//               <NavigateBeforeIcon />\n//             </IconButton>\n//           }\n//           navNext={ // 次の月に進むボタン ★\n//             <IconButton>\n//               <NavigateNextIcon />\n//             </IconButton>\n//           }\n//           // hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n//           onFocusChange={(focusedInput) => {\n//             setFocusedInput(!focusedInput ? 'startDate' : focusedInput);\n//           }}\n//           onDatesChange={(selectedDates) => {\n//             if (focusedInput === 'startDate') {\n//               setStartDate(selectedDates.startDate);\n//             } else {\n//               setEndDate(selectedDates.endDate);\n//             }\n//           }}\n//           onOutsideClick={() => setDisplay(false)}\n//         />\n//       )}\n//     </>\n//   );\n// };\n// export default CustomReactDatesDateRangePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomReactDatesDateRangePicker\");","map":{"version":3,"sources":["/app/src/pages/Calendar.js"],"names":["Link","Header","Footer","React","useEffect","useState","createStyles","makeStyles","TextField","moment","DayPickerRangeController","IconButton","NavigateBeforeIcon","NavigateNextIcon","format","compareAsc","SingleDatePicker","CustomReactDatesDateRangePicker","dateFormat","date","setDate","focused","setFocused"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,0BAAzC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,UAAnC;AACA,OAAO,kBAAP;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,sCAAP;;;;AAEA,SAASC,+BAAT,GAA2C;AAAA;;AACzC,QAAMC,UAAU,GAAG,YAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AAEA,sBACE;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO;AAAA;AAAG;AACR,cAAC,UAAD;AAAA,+BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAME,MAAA,OAAO;AAAA;AAAG;AACR,cAAC,UAAD;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ;AAWE,MAAA,0BAA0B,EAAE,IAX9B,CAWoC;AAXpC;AAYE,MAAA,IAAI,EAAEc,IAZR;AAaE,MAAA,YAAY,EAAEA,IAAI,IAAIC,OAAO,CAACD,IAAD,CAb/B;AAcE,MAAA,OAAO,EAAEE,OAdX;AAeE,MAAA,aAAa,EAAEA,OAAO,IAAIC,UAAU,CAACD,OAAD,CAftC,CAgBE;AACA;;AAjBF;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAUZ,MAAM,CAACU,IAAD,CAAN,CAAaL,MAAb,CAAoBI,UAApB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AAwBD;;GA7BQD,+B;;KAAAA,+B;AA+BT,eAAeA,+BAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { Link } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport { DayPickerRangeController } from 'react-dates';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { format, compareAsc } from 'date-fns'\nimport 'moment/locale/ja';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { SingleDatePicker } from 'react-dates';\n\nimport '../styles/css/react-dates-custom.css';\n\nfunction CustomReactDatesDateRangePicker() {\n  const dateFormat = 'YYYY-MM-DD';\n  const [date, setDate] = useState();\n  const [focused, setFocused] = useState(true);\n\n  return (\n    <>\n      <SingleDatePicker\n        navPrev={ // 前の月に戻るボタン ★\n          <IconButton>\n            <NavigateBeforeIcon />\n          </IconButton>\n        }\n        navNext={ // 次の月に進むボタン ★\n          <IconButton>\n            <NavigateNextIcon />\n          </IconButton>\n        }\n        hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n        date={date}\n        onDateChange={date => setDate(date)}\n        focused={focused}\n        onFocusChange={focused => setFocused(focused)}\n        // id=\"date\"\n        // onClose={focused => setFocused(false)}\n      />\n      <Link to={'/diary/'+moment(date).format(dateFormat)}>日記を書く</Link>\n    </>\n  );\n}\n\nexport default CustomReactDatesDateRangePicker;\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n//     textField: {\n//       width: '25ch',\n//     },\n//   })\n// );\n\n// function CustomReactDatesDateRangePicker(){\n//   const classes = useStyles();\n//   const dateFormat = 'YYYY/MM/DD';\n//   const [startDate, setStartDate] = useState(null);\n//   const [endDate, setEndDate] = useState(null);\n//   const [focusedInput, setFocusedInput] = useState('startDate');\n//   const [display, setDisplay] = useState(false);\n\n//   return (\n//     <>\n//       <TextField\n//         className={classes.textField}\n//         label=\"react-dates\"\n//         value={\n//           startDate && endDate\n//             ? `${startDate.format(dateFormat)} ~ ${endDate.format(dateFormat)}`\n//             : ''\n//         }\n//         onFocus={() => setDisplay(true)}\n//       />\n//       {display && (\n//         <DayPickerRangeController\n//           startDate={startDate}\n//           endDate={endDate}\n//           focusedInput={focusedInput}\n//           navPrev={ // 前の月に戻るボタン ★\n//             <IconButton>\n//               <NavigateBeforeIcon />\n//             </IconButton>\n//           }\n//           navNext={ // 次の月に進むボタン ★\n//             <IconButton>\n//               <NavigateNextIcon />\n//             </IconButton>\n//           }\n//           // hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n//           onFocusChange={(focusedInput) => {\n//             setFocusedInput(!focusedInput ? 'startDate' : focusedInput);\n//           }}\n//           onDatesChange={(selectedDates) => {\n//             if (focusedInput === 'startDate') {\n//               setStartDate(selectedDates.startDate);\n//             } else {\n//               setEndDate(selectedDates.endDate);\n//             }\n//           }}\n//           onOutsideClick={() => setDisplay(false)}\n//         />\n//       )}\n//     </>\n//   );\n// };\n\n// export default CustomReactDatesDateRangePicker;"]},"metadata":{},"sourceType":"module"}