{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Diary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Translate from '../components/Translate';\nimport axios from 'axios';\nimport { AuthContext } from \"../store/Auth\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Diary() {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    date\n  } = useParams();\n  const initformContent = {\n    diary: {\n      jaContent: \"\",\n      date: date\n    },\n    diaryContent: {\n      languageId: 1,\n      content: \"\"\n    }\n  };\n  const [languages, setLanguages] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const [formContent, setFormContent] = useState(initformContent);\n  const [selectedLanguage, setSelectedLanguage] = useState({\n    id: 1,\n    name: '英語',\n    code: 'en'\n  });\n\n  const initLanguagesEffect = () => {\n    console.log(\"init effect\");\n    axios.get(`/languages`).then(res => {\n      const result = res.data;\n      setLanguages(result);\n    });\n  };\n\n  const initExistDiaryEffect = () => {\n    console.log(\"existdiary effect\");\n\n    if (languages && auth.currentUser.language_id) {\n      // console.log(auth)\n      // console.log(languages)\n      // console.log(selectedLanguage)\n      setSelectedLanguage(getLanguage(auth.currentUser.language_id));\n      axios.get(`/diaries/${formContent.diary.date}`).then(res => {\n        const existDiary = res.data.diary; // console.log(existDiary)\n\n        if (existDiary) {\n          setIsEdit(true);\n\n          if (formContent.diaryContent.languageId && languages.length) {\n            convertExistDiary(existDiary);\n          }\n        }\n      });\n    }\n  };\n\n  useEffect(initLanguagesEffect, []);\n  useEffect(initExistDiaryEffect, [languages, auth]);\n\n  const getLanguage = languageId => {\n    return languages.find(language => Number(language.id) === Number(languageId));\n  };\n\n  const getDiaryContent = diary => {\n    const language = auth.currentUser && getLanguage(auth.currentUser.language_id) ? getLanguage(auth.currentUser.language_id) : getLanguage(1);\n    setSelectedLanguage(language);\n    return diary.diary_contents.find(dc => {\n      return Number(dc.language_id) === Number(language.id);\n    });\n  };\n\n  const convertExistDiary = existDiary => {\n    const existDiaryContent = getDiaryContent(existDiary);\n    setFormContent({\n      diary: { ...formContent.diary,\n        jaContent: existDiary.ja_content\n      },\n      diaryContent: { ...formContent.diaryContent,\n        languageId: existDiaryContent ? existDiaryContent.language_id : auth.currentUser.language_id,\n        content: existDiaryContent ? existDiaryContent.content : ''\n      }\n    });\n  };\n\n  const handleChangeLanguage = e => {\n    setFormContent({\n      diary: { ...formContent.diary\n      },\n      diaryContent: { ...formContent.diaryContent,\n        languageId: e.target.value\n      }\n    });\n    setSelectedLanguage(getLanguage(e.target.value));\n  };\n\n  const handleChangeJapaneseDiary = e => {\n    setFormContent({\n      diary: { ...formContent.diary,\n        jaContent: e.target.value\n      },\n      diaryContent: { ...formContent.diaryContent\n      }\n    });\n  };\n\n  const handleChangeDiaryContent = e => {\n    setFormContent({\n      diary: { ...formContent.diary\n      },\n      diaryContent: { ...formContent.diaryContent,\n        content: e.target.value\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isEdit) {\n      axios.patch(`/diaries/${formContent.diary.date}`, formContent).then(res => {});\n    } else {\n      axios.post(`/diaries`, formContent).then(res => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u65E5\\u672C\\u8A9E\\u65E5\\u8A18\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChangeJapaneseDiary,\n        value: formContent.diary.jaContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u5916\\u56FD\\u8A9E\\u65E5\\u8A18\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChangeDiaryContent,\n        value: formContent.diaryContent.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u8A00\\u8A9E\\u9078\\u629E\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChangeLanguage,\n        value: formContent.diaryContent.languageId,\n        children: languages.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language.id,\n          children: language.name\n        }, language.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u3067\\u3051\\u305F\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Translate, {\n        language: selectedLanguage,\n        jaContent: formContent.diary.jaContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Diary, \"oLojDJuq+T4yWODBTORhlDSJWjQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/app/src/pages/Diary.js"],"names":["React","useState","useEffect","useContext","Translate","axios","AuthContext","useParams","Diary","auth","date","initformContent","diary","jaContent","diaryContent","languageId","content","languages","setLanguages","isEdit","setIsEdit","formContent","setFormContent","selectedLanguage","setSelectedLanguage","id","name","code","initLanguagesEffect","console","log","get","then","res","result","data","initExistDiaryEffect","currentUser","language_id","getLanguage","existDiary","length","convertExistDiary","find","language","Number","getDiaryContent","diary_contents","dc","existDiaryContent","ja_content","handleChangeLanguage","e","target","value","handleChangeJapaneseDiary","handleChangeDiaryContent","handleSubmit","preventDefault","patch","post","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport Translate from '../components/Translate'\nimport axios from 'axios';\nimport { AuthContext } from \"../store/Auth\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction Diary() {\n  const auth = useContext(AuthContext);\n  const {date} = useParams();\n  const initformContent = {\n    diary: {\n      jaContent: \"\",\n      date: date\n    },\n    diaryContent: {\n      languageId: 1,\n      content: \"\"\n    }\n  }\n  \n  const [languages, setLanguages] = useState([])\n  const [isEdit, setIsEdit] = useState(false)\n  const [formContent, setFormContent] = useState(initformContent)\n  const [selectedLanguage, setSelectedLanguage] = useState({id: 1, name: '英語', code: 'en'})\n  const initLanguagesEffect = () => {\n    console.log(\"init effect\")\n    axios.get(`/languages`)\n      .then(res => {\n        const result = res.data\n        setLanguages(result);\n      })\n  }\n  \n  const initExistDiaryEffect = () => {\n    console.log(\"existdiary effect\")\n    if(languages && auth.currentUser.language_id){\n      // console.log(auth)\n      // console.log(languages)\n      // console.log(selectedLanguage)\n      setSelectedLanguage(getLanguage(auth.currentUser.language_id))\n      axios.get(`/diaries/${formContent.diary.date}`)\n        .then(res => {\n          const existDiary = res.data.diary;\n          // console.log(existDiary)\n          if(existDiary){\n            setIsEdit(true)\n            if(formContent.diaryContent.languageId && languages.length){\n              convertExistDiary(existDiary);\n            }\n          }\n        })\n    }\n  }\n\n  useEffect(initLanguagesEffect, [])\n  useEffect(initExistDiaryEffect, [languages, auth])\n\n  const getLanguage = (languageId) => {\n    return languages.find(language => Number(language.id) === Number(languageId))\n  }\n\n  const getDiaryContent = (diary) => {\n    const language = auth.currentUser && getLanguage(auth.currentUser.language_id) ? getLanguage(auth.currentUser.language_id) : getLanguage(1)\n    setSelectedLanguage(language)\n    return diary.diary_contents.find(dc => {\n      return Number(dc.language_id) === Number(language.id)\n    })\n  }\n\n  const convertExistDiary = (existDiary) => {\n    const existDiaryContent = getDiaryContent(existDiary)\n    setFormContent(\n      {\n        diary: {\n          ...formContent.diary,\n          jaContent: existDiary.ja_content\n        },\n        diaryContent: {\n          ...formContent.diaryContent,\n          languageId: existDiaryContent ? existDiaryContent.language_id : auth.currentUser.language_id,\n          content: existDiaryContent ? existDiaryContent.content : ''\n        }\n      }\n      );\n  };\n\n  const handleChangeLanguage = (e) => {\n    setFormContent(\n      {\n        diary: {\n          ...formContent.diary,\n        },\n        diaryContent: {\n          ...formContent.diaryContent,\n          languageId: e.target.value\n        }\n      }\n    );\n    setSelectedLanguage(getLanguage(e.target.value))\n  };\n\n  const handleChangeJapaneseDiary = (e) => {\n    setFormContent(\n      {\n        diary: {\n          ...formContent.diary,\n          jaContent: e.target.value\n        },\n        diaryContent: {\n          ...formContent.diaryContent\n        }\n      }\n    );\n  };\n\n  const handleChangeDiaryContent = (e) => {\n    setFormContent(\n      {\n        diary: {\n          ...formContent.diary\n        },\n        diaryContent: {\n          ...formContent.diaryContent,\n          content: e.target.value\n        }\n      }\n    )\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if(isEdit){\n      axios.patch(`/diaries/${formContent.diary.date}`, formContent)\n        .then(res =>{\n        })\n    }else{\n      axios.post(`/diaries`, formContent)\n        .then(res => {\n        })\n    }\n  }\n\n  return(\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>日本語日記</label>\n        <textarea onChange={handleChangeJapaneseDiary} value={formContent.diary.jaContent}></textarea>\n        <br/>\n        <label>外国語日記</label>\n        <textarea onChange={handleChangeDiaryContent} value={formContent.diaryContent.content}></textarea>\n        <br/>\n        <label>言語選択：</label>\n        <select onChange={handleChangeLanguage} value={formContent.diaryContent.languageId}>\n          {languages.map(language => \n            <option key={language.id} value={language.id}>\n              {language.name}\n            </option>)\n          }\n        </select>\n        <br/>\n        <button type=\"submit\">でけた！</button>\n      </form>\n      <div>\n          <Translate\n            language={selectedLanguage}\n            jaContent={formContent.diary.jaContent}\n          />\n      </div>\n    </>\n  )\n}\n\nexport default Diary;"]},"metadata":{},"sourceType":"module"}