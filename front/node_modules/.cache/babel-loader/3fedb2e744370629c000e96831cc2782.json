{"ast":null,"code":"var _jsxFileName = \"/app/src/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContext = {\n  currentUser: null,\n  isLoggedIn: false\n};\nconst AuthContext = /*#__PURE__*/React.createContext(initialContext);\n\nconst AuthProvider = props => {\n  _s();\n\n  const history = useHistory();\n\n  const login = loggedInUser => {\n    setCurrentUser(loggedInUser); // console.log(loggedInUser)\n\n    loggedInUser ? setIsLoggedIn(true) : setIsLoggedIn(false);\n    history.push('/');\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    setIsLoggedIn(false);\n    history.push('/login');\n  };\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n\n  const fetchCurrentUser = () => {\n    axios.get(`/current_user`).then(res => {\n      // console.log(res.data)\n      setCurrentUser(res.data.data);\n      res.data.data === null ? setIsLoggedIn(false) : setIsLoggedIn(true);\n    });\n  };\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n  const value = {\n    currentUser,\n    isLoggedIn,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"HXN3fRGyC9qOZn2RcC2mXILIN7M=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/app/src/Auth.js"],"names":["React","useState","useEffect","axios","useHistory","initialContext","currentUser","isLoggedIn","AuthContext","createContext","AuthProvider","props","history","login","loggedInUser","setCurrentUser","setIsLoggedIn","push","logout","fetchCurrentUser","get","then","res","data","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,WAAW,EAAE,IADQ;AAErBC,EAAAA,UAAU,EAAE;AAFS,CAAvB;AAIA,MAAMC,WAAW,gBAAGR,KAAK,CAACS,aAAN,CAAoBJ,cAApB,CAApB;;AAEA,MAAMK,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,KAAK,GAAIC,YAAD,IAAkB;AAC9BC,IAAAA,cAAc,CAACD,YAAD,CAAd,CAD8B,CAE9B;;AACAA,IAAAA,YAAY,GAAGE,aAAa,CAAC,IAAD,CAAhB,GAAyBA,aAAa,CAAC,KAAD,CAAlD;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD,GALD;;AAOA,QAAMC,MAAM,GAAG,MAAM;AACnBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACD,GAJD;;AAKA,QAAM,CAACV,UAAD,EAAaS,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACK,WAAD,EAAcS,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMkB,gBAAgB,GAAG,MAAM;AAC7BhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,eAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX;AACAP,MAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAd;AACAD,MAAAA,GAAG,CAACC,IAAJ,CAASA,IAAT,KAAkB,IAAlB,GAAyBP,aAAa,CAAC,KAAD,CAAtC,GAAgDA,aAAa,CAAC,IAAD,CAA7D;AACD,KALH;AAMD,GAPD;;AASAd,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMK,KAAK,GAAG;AAAClB,IAAAA,WAAD;AAAcC,IAAAA,UAAd;AAA0BM,IAAAA,KAA1B;AAAiCK,IAAAA;AAAjC,GAAd;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAEM,KADT;AAAA,cAGIb,KAAK,CAACc;AAHV;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtCD;;GAAMf,Y;UACYN,U;;;KADZM,Y;AAwCN,SAASF,WAAT,EAAsBE,YAAtB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router';\n\nconst initialContext = {\n  currentUser: null,\n  isLoggedIn: false,\n}\nconst AuthContext = React.createContext(initialContext);\n\nconst AuthProvider = (props) => {\n  const history = useHistory();\n  \n  const login = (loggedInUser) => {\n    setCurrentUser(loggedInUser)\n    // console.log(loggedInUser)\n    loggedInUser ? setIsLoggedIn(true) : setIsLoggedIn(false)\n    history.push('/')\n  }\n\n  const logout = () => {\n    setCurrentUser(null)\n    setIsLoggedIn(false)\n    history.push('/login')\n  }\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [currentUser, setCurrentUser] = useState({})\n\n  const fetchCurrentUser = () => {\n    axios.get(`/current_user`)\n      .then(res => {\n        // console.log(res.data)\n        setCurrentUser(res.data.data)\n        res.data.data === null ? setIsLoggedIn(false) : setIsLoggedIn(true)\n      })\n  }\n\n  useEffect(() => {\n    fetchCurrentUser()\n  }, []);\n  const value = {currentUser, isLoggedIn, login, logout}\n  return (\n    <AuthContext.Provider\n      value={value}\n    >\n      { props.children }\n    </AuthContext.Provider>\n  );\n}\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}