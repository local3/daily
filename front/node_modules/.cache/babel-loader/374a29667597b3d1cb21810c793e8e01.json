{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Translate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from \"../Auth\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Translate(props) {\n  _s();\n\n  const [translatedText, setTranslatedText] = useState('');\n\n  const handleTranslateClick = () => {\n    const text = props.jaContent;\n    const fromLang = 'ja';\n    const toLang = 'en';\n    console.log(text); // 翻訳\n\n    const params = {\n      key: process.env.REACT_APP_GCP_TRANSLATE_API_KEY,\n      q: text,\n      source: fromLang,\n      target: toLang\n    };\n    console.log(params);\n    axios.get(`https://translation.googleapis.com/language/translate/v2`, {\n      params: params\n    }).then(res => {\n      // https://qiita.com/mfykmn/items/4a3afbad46b04f92da29\n      // HTML文字列の特殊文字をデコードする\n      // 文字列の変更があるごとに翻訳していては、翻訳の無料枠を超えてしまう可能性があるためボタンで翻訳\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(res.data[\"data\"][\"translations\"][0][\"translatedText\"], \"text/html\");\n      setTranslatedText(doc.body.innerText);\n    });\n    console.log(translatedText); // return translatedText\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranslateClick,\n      children: \"\\u7FFB\\u8A33\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u65E5\\u672C\\u8A9E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), props.jaContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u7FFB\\u8A33\\u8A9E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), translatedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Translate, \"ytrbSrIKPzK+DctIOOBx/LA9TZ8=\");\n\n_c = Translate;\nexport default Translate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Translate\");","map":{"version":3,"sources":["/app/src/components/Translate.js"],"names":["React","useState","useEffect","useContext","Link","axios","AuthContext","useParams","Translate","props","translatedText","setTranslatedText","handleTranslateClick","text","jaContent","fromLang","toLang","console","log","params","key","process","env","REACT_APP_GCP_TRANSLATE_API_KEY","q","source","target","get","then","res","parser","DOMParser","doc","parseFromString","data","body","innerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AACA,QAAMW,oBAAoB,GAAG,MAAM;AACjC,UAAMC,IAAI,GAAGJ,KAAK,CAACK,SAAnB;AACA,UAAMC,QAAQ,GAAG,IAAjB;AACA,UAAMC,MAAM,GAAG,IAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAJiC,CAKjC;;AACA,UAAMM,MAAM,GAAG;AACbC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BADJ;AAEbC,MAAAA,CAAC,EAAEX,IAFU;AAGbY,MAAAA,MAAM,EAAEV,QAHK;AAIbW,MAAAA,MAAM,EAAEV;AAJK,KAAf;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAd,IAAAA,KAAK,CAACsB,GAAN,CAAW,0DAAX,EAAsE;AAAER,MAAAA,MAAM,EAAEA;AAAV,KAAtE,EAA0FS,IAA1F,CAA+FC,GAAG,IAAI;AACpG;AACA;AACA;AACA,YAAMC,MAAM,GAAG,IAAIC,SAAJ,EAAf;AACA,YAAMC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,GAAG,CAACK,IAAJ,CAAS,MAAT,EAAiB,cAAjB,EAAiC,CAAjC,EAAoC,gBAApC,CAAvB,EAA8E,WAA9E,CAAZ;AACAvB,MAAAA,iBAAiB,CAACqB,GAAG,CAACG,IAAJ,CAASC,SAAV,CAAjB;AACD,KAPD;AASAnB,IAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ,EAtBiC,CAwBjC;AACD,GAzBD;;AA2BA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEE,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEIH,KAAK,CAACK,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEIJ,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAaD;;GA1CQF,S;;KAAAA,S;AA4CT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { AuthContext } from \"../Auth\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Translate (props) {\n  const [translatedText, setTranslatedText] = useState('')\n  const handleTranslateClick = () => {\n    const text = props.jaContent\n    const fromLang = 'ja'\n    const toLang = 'en'\n    console.log(text)\n    // 翻訳\n    const params = {\n      key: process.env.REACT_APP_GCP_TRANSLATE_API_KEY,\n      q: text,\n      source: fromLang,\n      target: toLang\n    }\n    console.log(params)\n    axios.get(`https://translation.googleapis.com/language/translate/v2`, { params: params }).then(res => {\n      // https://qiita.com/mfykmn/items/4a3afbad46b04f92da29\n      // HTML文字列の特殊文字をデコードする\n      // 文字列の変更があるごとに翻訳していては、翻訳の無料枠を超えてしまう可能性があるためボタンで翻訳\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(res.data[\"data\"][\"translations\"][0][\"translatedText\"], \"text/html\");\n      setTranslatedText(doc.body.innerText)\n    })\n\n    console.log(translatedText)\n    \n    // return translatedText\n  }\n  \n  return(\n    <>\n      <button onClick={handleTranslateClick}>翻訳する</button>\n      <div>\n        <p>日本語</p>\n        { props.jaContent }\n      </div>\n      <div>\n        <p>翻訳語</p>\n        { translatedText }\n      </div>\n    </>\n  )\n}\n\nexport default Translate;"]},"metadata":{},"sourceType":"module"}