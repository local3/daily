{"ast":null,"code":"var _jsxFileName = \"/app/src/store/ErrorProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  msg: null,\n  status: 200\n};\nexport const ErrorContext = /*#__PURE__*/React.createContext(initialState);\n\nconst errorReducer = (state, action) => {\n  switch (action.status) {\n    case 422:\n      return { ...state,\n        msg: 'エラーだよ！',\n        className: 'warning'\n      };\n\n    case 0:\n      return {\n        initialState\n      };\n  }\n};\n\nconst ErrorProvider = props => {\n  _s();\n\n  const history = useHistory();\n  const [errorState, dispatch] = useReducer(errorReducer, initialState);\n  const value = {\n    errorState,\n    dispatch\n  };\n\n  const resetErrorMsg = () => {\n    dispatch({\n      status: 0\n    });\n  };\n\n  useEffect(resetErrorMsg, history);\n  return /*#__PURE__*/_jsxDEV(ErrorContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ErrorProvider, \"p1oMubd41jLVvOmHkEzKfZBCOGk=\", false, function () {\n  return [useHistory];\n});\n\n_c = ErrorProvider;\nexport default ErrorProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorProvider\");","map":{"version":3,"sources":["/app/src/store/ErrorProvider.js"],"names":["React","useEffect","useReducer","useHistory","initialState","msg","status","ErrorContext","createContext","errorReducer","state","action","className","ErrorProvider","props","history","errorState","dispatch","value","resetErrorMsg","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,GAAG,EAAE,IAAP;AAAaC,EAAAA,MAAM,EAAE;AAArB,CAArB;AACA,OAAO,MAAMC,YAAY,gBAAGP,KAAK,CAACQ,aAAN,CAAoBJ,YAApB,CAArB;;AACP,MAAMK,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACL,MAAd;AACC,SAAK,GAAL;AACC,aAAO,EAAE,GAAGI,KAAL;AAAYL,QAAAA,GAAG,EAAE,QAAjB;AAA2BO,QAAAA,SAAS,EAAE;AAAtC,OAAP;;AACD,SAAK,CAAL;AACC,aAAO;AAAER,QAAAA;AAAF,OAAP;AAJF;AAMD,CAPD;;AASA,MAAMS,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAM,CAACa,UAAD,EAAaC,QAAb,IAAyBf,UAAU,CAACO,YAAD,EAAeL,YAAf,CAAzC;AACA,QAAMc,KAAK,GAAG;AAACF,IAAAA,UAAD;AAAaC,IAAAA;AAAb,GAAd;;AACA,QAAME,aAAa,GAAG,MAAM;AAC3BF,IAAAA,QAAQ,CAAC;AAACX,MAAAA,MAAM,EAAE;AAAT,KAAD,CAAR;AACA,GAFD;;AAGAL,EAAAA,SAAS,CAACkB,aAAD,EAAgBJ,OAAhB,CAAT;AACA,sBACC,QAAC,YAAD,CAAc,QAAd;AACC,IAAA,KAAK,EAAEG,KADR;AAAA,cAGGJ,KAAK,CAACM;AAHT;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAfD;;GAAMP,a;UACWV,U;;;KADXU,a;AAgBN,eAAeA,aAAf","sourcesContent":["import React,{ useEffect, useReducer } from 'react'\nimport { useHistory } from 'react-router';\n\nconst initialState = { msg: null ,status: 200}\nexport const ErrorContext = React.createContext(initialState)\nconst errorReducer = (state, action) => {\n\t\tswitch(action.status){\n\t\t\tcase(422):\n\t\t\t\treturn { ...state, msg: 'エラーだよ！', className: 'warning'}\n\t\t\tcase(0):\n\t\t\t\treturn { initialState }\n\t\t}\n}\n\nconst ErrorProvider = (props) => {\n\tconst history = useHistory()\n\tconst [errorState, dispatch] = useReducer(errorReducer, initialState)\n\tconst value = {errorState, dispatch}\n\tconst resetErrorMsg = () => {\n\t\tdispatch({status: 0})\n\t}\n\tuseEffect(resetErrorMsg, history)\n\treturn(\n\t\t<ErrorContext.Provider\n\t\t\tvalue={value}\n\t\t>\n\t\t\t{ props.children }\n\t\t</ErrorContext.Provider>\n\t)\n}\nexport default ErrorProvider;"]},"metadata":{},"sourceType":"module"}