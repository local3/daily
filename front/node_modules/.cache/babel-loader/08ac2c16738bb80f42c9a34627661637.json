{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { SingleDatePicker } from \"react-dates\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport \"moment/locale/ja\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport \"../styles/css/react-dates-custom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calendar() {\n  _s();\n\n  const dateFormat = \"YYYY-MM-DD\";\n  const [date, setDate] = useState();\n  const [focused, setFocused] = useState(true);\n  const [existDates, setExistDates] = useState([]);\n\n  const initExistDatesEffect = () => {\n    axios.get('/diaries/exist_dates').then(res => {\n      setExistDates(res.data.exist_dates);\n    });\n  };\n\n  const addClassName = () => {\n    if (existDates.length > 0) {\n      existDates.forEach(date => {\n        const element = document.querySelector(`td[aria-label='${date}']`);\n        element && element.classList.add('exist_date');\n      });\n    }\n  };\n\n  useEffect(initExistDatesEffect, []);\n  useEffect(addClassName, [existDates]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SingleDatePicker, {\n      navPrev:\n      /*#__PURE__*/\n      // 前の月に戻るボタン ★\n      _jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this),\n      navNext:\n      /*#__PURE__*/\n      // 次の月に進むボタン ★\n      _jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this),\n      withFullScreenPortal: true,\n      hideKeyboardShortcutsPanel: true // 右下の?ボタンをなくす\n      ,\n      date: date,\n      onDateChange: date => setDate(date),\n      focused: focused,\n      onFocusChange: focused => setFocused(focused) // id=\"date\"\n      ,\n      onClose: focused => setFocused(false),\n      isOutsideRange: () => false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/diary/\" + moment(date).format(dateFormat),\n      children: \"\\u65E5\\u8A18\\u3092\\u66F8\\u304F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calendar, \"yDbwKQPzvWiis/e8gAHPyeo7rpE=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/app/src/pages/Calendar.js"],"names":["React","useState","useEffect","Link","axios","SingleDatePicker","moment","IconButton","NavigateBeforeIcon","NavigateNextIcon","Calendar","dateFormat","date","setDate","focused","setFocused","existDates","setExistDates","initExistDatesEffect","get","then","res","data","exist_dates","addClassName","length","forEach","element","document","querySelector","classList","add","format"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAO,kBAAP;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AAEA,OAAO,sCAAP;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,UAAU,GAAG,YAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMiB,oBAAoB,GAAG,MAAM;AACjCd,IAAAA,KAAK,CAACe,GAAN,CAAU,sBAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,aAAa,CAACI,GAAG,CAACC,IAAJ,CAASC,WAAV,CAAb;AACD,KAHH;AAID,GALD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAGR,UAAU,CAACS,MAAX,GAAoB,CAAvB,EAAyB;AACvBT,MAAAA,UAAU,CAACU,OAAX,CAAmBd,IAAI,IAAI;AACzB,cAAMe,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAwB,kBAAiBjB,IAAK,IAA9C,CAAhB;AACAe,QAAAA,OAAO,IAAIA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,YAAtB,CAAX;AACD,OAHD;AAID;AACF,GAPD;;AAQA7B,EAAAA,SAAS,CAACgB,oBAAD,EAAuB,EAAvB,CAAT;AACAhB,EAAAA,SAAS,CAACsB,YAAD,EAAe,CAACR,UAAD,CAAf,CAAT;AAEA,sBACE;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO;AAAA;AACL;AACA,cAAC,UAAD;AAAA,+BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHJ;AAOE,MAAA,OAAO;AAAA;AACL;AACA,cAAC,UAAD;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATJ;AAaE,MAAA,oBAAoB,EAAE,IAbxB;AAcE,MAAA,0BAA0B,EAAE,IAd9B,CAcoC;AAdpC;AAeE,MAAA,IAAI,EAAEJ,IAfR;AAgBE,MAAA,YAAY,EAAGA,IAAD,IAAUC,OAAO,CAACD,IAAD,CAhBjC;AAiBE,MAAA,OAAO,EAAEE,OAjBX;AAkBE,MAAA,aAAa,EAAGA,OAAD,IAAaC,UAAU,CAACD,OAAD,CAlBxC,CAmBE;AAnBF;AAoBE,MAAA,OAAO,EAAGA,OAAD,IAAaC,UAAU,CAAC,KAAD,CApBlC;AAqBE,MAAA,cAAc,EAAG,MAAM;AArBzB;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAYT,MAAM,CAACM,IAAD,CAAN,CAAaoB,MAAb,CAAoBrB,UAApB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA,kBADF;AA4BD;;GAlDQD,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios'\nimport { SingleDatePicker } from \"react-dates\";\nimport moment from \"moment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nimport \"moment/locale/ja\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\n\nimport \"../styles/css/react-dates-custom.css\";\n\nfunction Calendar() {\n  const dateFormat = \"YYYY-MM-DD\";\n  const [date, setDate] = useState();\n  const [focused, setFocused] = useState(true);\n  const [existDates, setExistDates] = useState([]);\n  const initExistDatesEffect = () => {\n    axios.get('/diaries/exist_dates')\n      .then(res => {\n        setExistDates(res.data.exist_dates)\n      })\n  };\n  const addClassName = () => {\n    if(existDates.length > 0){\n      existDates.forEach(date => {\n        const element = document.querySelector(`td[aria-label='${date}']`)\n        element && element.classList.add('exist_date')\n      });\n    }\n  }\n  useEffect(initExistDatesEffect, []);\n  useEffect(addClassName, [existDates])\n\n  return (\n    <>\n      <SingleDatePicker\n        navPrev={\n          // 前の月に戻るボタン ★\n          <IconButton>\n            <NavigateBeforeIcon />\n          </IconButton>\n        }\n        navNext={\n          // 次の月に進むボタン ★\n          <IconButton>\n            <NavigateNextIcon />\n          </IconButton>\n        }\n        withFullScreenPortal={true}\n        hideKeyboardShortcutsPanel={true} // 右下の?ボタンをなくす\n        date={date}\n        onDateChange={(date) => setDate(date)}\n        focused={focused}\n        onFocusChange={(focused) => setFocused(focused)}\n        // id=\"date\"\n        onClose={(focused) => setFocused(false)}\n        isOutsideRange={ () => false}\n      />\n      <Link to={\"/diary/\" + moment(date).format(dateFormat)}>日記を書く</Link>\n    </>\n  );\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}